@using BlazorGoogleAuth.Authorization
@using System.Security.Claims
@implements IDisposable
@inherits AuthStateComponentBase
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorGoogleAuth</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>



        @if (isAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Account/Manage">
                    <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @authState.User.Identity?.Name
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <button type="submit" class="nav-link" onclick="@LogoutUser">
                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                </button>

            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Account/Register">
                    <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Account/Login">
                    <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }

    </nav>
</div>

@code {

    private string? currentUrl;

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }



    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private async Task LogoutUser()
    {
        HybridAuthService.SetAuthenticationState(false);

        // Clear the session data if necessary
        HybridAuthService.SetAccessToken("null");

        // Refresh the component state to reflect changes
        StateHasChanged();
        isAuthenticated = false;
    }

    protected override async Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
        await RefreshAuthenticationState();
    }
}

